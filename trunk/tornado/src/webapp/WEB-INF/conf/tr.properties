##
 # Common Public License - v 1.0
 #
 #
 # THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS
 #  COMMON PUBLIC LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR
 # DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF
 # THIS AGREEMENT.
 #
 #
 # 1. DEFINITIONS
 #
 # "Contribution" means:
 #
 # a) in the case of the initial Contributor, the initial code and documentation distributed under this
 #  Agreement, and
 # b) in the case of each subsequent Contributor:
 # i) changes to the Program, and
 # ii) additions to the Program;
 # where such changes and/or additions to the Program originate from and are distributed by that
 # particular Contributor. A Contribution 'originates' from a Contributor if it was added to the
 # Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions
 # do not include additions to the Program which: (i) are separate modules of software distributed in
 # conjunction with the Program under their own license agreement, and (ii) are not derivative works
 # of the Program.
 #
 # "Contributor" means any person or entity that distributes the Program.
 #
 #
 # "Licensed Patents " mean patent claims licensable by a Contributor which are necessarily
 # infringed by the use or sale of its Contribution alone or when combined with the Program.
 #
 #
 # "Program" means the Contributions distributed in accordance with this Agreement.
 #
 #
 # "Recipient" means anyone who receives the Program under this Agreement, including all
 # Contributors.
 #
 #
 # 2. GRANT OF RIGHTS
 #
 # a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a
 # non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of,
 # publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor,
 # if any, and such derivative works, in source code and object code form.
 # b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a
 #  non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell,
 # offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source
 # code and object code form. This patent license shall apply to the combination of the Contribution
 #  and the Program if, at the time the Contribution is added by the Contributor, such addition of the
 # Contribution causes such combination to be covered by the Licensed Patents. The patent license
 #  shall not apply to any other combinations which include the Contribution. No hardware per se is
 # licensed hereunder.
 # c) Recipient understands that although each Contributor grants the licenses to its Contributions set
 # forth herein, no assurances are provided by any Contributor that the Program does not infringe the
 # patent or other intellectual property rights of any other entity. Each Contributor disclaims any
 # liability to Recipient for claims brought by any other entity based on infringement of intellectual
 # property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder,
 # each Recipient hereby assumes sole responsibility to secure any other intellectual property rights
 # needed, if any. For example, if a third party patent license is required to allow Recipient to
 #  distribute the Program, it is Recipient's responsibility to acquire that license before distributing
 # the Program.
 # d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its
 # Contribution, if any, to grant the copyright license set forth in this Agreement.
 # 3. REQUIREMENTS
 #
 # A Contributor may choose to distribute the Program in object code form under its own license
 # agreement, provided that:
 #
 # a) it complies with the terms and conditions of this Agreement; and
 # b) its license agreement:
 # i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and
 #  implied, including warranties or conditions of title and non-infringement, and implied warranties
 # or conditions of merchantability and fitness for a particular purpose;
 # ii) effectively excludes on behalf of all Contributors all liability for damages, including direct,
 # indirect, special, incidental and consequential damages, such as lost profits;
 # iii) states that any provisions which differ from this Agreement are offered by that Contributor
 # alone and not by any other party; and
 # iv) states that source code for the Program is available from such Contributor, and informs
 # licensees how to obtain it in a reasonable manner on or through a medium customarily used for
 # software exchange.
 # When the Program is made available in source code form:
 #
 # a) it must be made available under this Agreement; and
 # b) a copy of this Agreement must be included with each copy of the Program.
 #
 # Contributors may not remove or alter any copyright notices contained within the Program.
 #
 #
 # Each Contributor must identify itself as the originator of its Contribution, if any, in a manner that
 # reasonably allows subsequent Recipients to identify the originator of the Contribution.
 #
 #
 # 4. COMMERCIAL DISTRIBUTION
 #
 # Commercial distributors of software may accept certain responsibilities with respect to end users,
 # business partners and the like. While this license is intended to facilitate the commercial use of the
 # Program, the Contributor who includes the Program in a commercial product offering should do
 # so in a manner which does not create potential liability for other Contributors. Therefore, if a
 # Contributor includes the Program in a commercial product offering, such Contributor
 #  ("Commercial Contributor") hereby agrees to defend and indemnify every other Contributor
 #  ("Indemnified Contributor") against any losses, damages and costs (collectively "Losses") arising
 # from claims, lawsuits and other legal actions brought by a third party against the Indemnified
 # Contributor to the extent caused by the acts or omissions of such Commercial Contributor
 #  in connection with its distribution of the Program in a commercial product offering. The
 # obligations in this section do not apply to any claims or Losses relating to any actual or alleged
 # intellectual property infringement. In order to qualify, an Indemnified Contributor must: a)
 # promptly notify the Commercial Contributor in writing of such claim, and b) allow the
 # Commercial Contributor to control, and cooperate with the Commercial Contributor in, the
 # defense and any related settlement negotiations. The Indemnified Contributor may participate in
 # any such claim at its own expense.
 #
 #
 # For example, a Contributor might include the Program in a commercial product offering, Product
 # X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes
 #  performance claims, or offers warranties related to Product X, those performance claims and
 #  warranties are such Commercial Contributor's responsibility alone. Under this section, the
 # Commercial Contributor would have to defend claims against the other Contributors related to
 # those performance claims and warranties, and if a court requires any other Contributor to pay any
 #  damages as a result, the Commercial Contributor must pay those damages.
 #
 #
 # 5. NO WARRANTY
 #
 # EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 # PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 # KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 # WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 # OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for
 # determining the appropriateness of using and distributing the Program and assumes all risks
 # associated with its exercise of rights under this Agreement, including but not limited to the risks
 # and costs of program errors, compliance with applicable laws, damage to or loss of data, programs
 # or equipment, and unavailability or interruption of operations.
 #
 #
 # 6. DISCLAIMER OF LIABILITY
 #
 # EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR
 #  ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT,
 #  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING
 # WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY
 # OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 #  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR
 # DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED
 #  HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 #
 #
 # 7. GENERAL
 #
 # If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not
 # affect the validity or enforceability of the remainder of the terms of this Agreement, and without
 # further action by the parties hereto, such provision shall be reformed to the minimum extent
 # necessary to make such provision valid and enforceable.
 #
 #
 # If Recipient institutes patent litigation against a Contributor with respect to a patent applicable to
 # software (including a cross-claim or counterclaim in a lawsuit), then any patent licenses granted
 # by that Contributor to such Recipient under this Agreement shall terminate as of the date such
 # litigation is filed. In addition, if Recipient institutes patent litigation against any entity (including a
 # cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations
 #  of the Program with other software or hardware) infringes such Recipient's patent(s), then such
 # Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.
 #
 #
 # All Recipient's rights under this Agreement shall terminate if it fails to comply with any of the
 # material terms or conditions of this Agreement and does not cure such failure in a reasonable
 # period of time after becoming aware of such noncompliance. If all Recipient's rights under this
 #  Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as
 # reasonably practicable. However, Recipient's obligations under this Agreement and any licenses
 # granted by Recipient relating to the Program shall continue and survive.
 #
 #
 # Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid
 # inconsistency the Agreement is copyrighted and may only be modified in the following manner.
 #  The Agreement Steward reserves the right to publish new versions (including revisions) of this
 # Agreement from time to time. No one other than the Agreement Steward has the right to modify
 # this Agreement. IBM is the initial Agreement Steward. IBM may assign the responsibility to serve
 # as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be
 # given a distinguishing version number. The Program (including Contributions) may always be
 # distributed subject to the version of the Agreement under which it was received. In addition, after
 # a new version of the Agreement is published, Contributor may elect to distribute the Program
 #  (including its Contributions) under the new version. Except as expressly stated in Sections 2(a)
 # and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any
 # Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All
 # rights in the Program not expressly granted under this Agreement are reserved.
 #
 #
 # This  Agreement is  governed by  the laws   of the  State of  New York  and  the
 # intellectual property laws  of the United  States of America.  No party to  this
 # Agreement will  bring a  legal action  under this  Agreement more  than one year
 # after the cause of action arose. Each party waives its rights to a jury trial in
 # any resulting litigation.
 ##

# -------------------------------------------------------------------
# 
#  S Y S T E M  P R O P E R T I E S
#
# -------------------------------------------------------------------
system.mail.host=mail.vtradex.com
system.mail.smtp.from=admin@jftech.com

# -------------------------------------------------------------------
# 
#  L O G G I N G
#
# -------------------------------------------------------------------
# We use Log4J for all Turbine logging and we embed the log4j
# properties within our application configuration.
#
# NOTE:
# The presence of ${applicationRoot} in the logging configuration
# is not a mistake. Internally the value of ${applicationRoot}
# is set so that you can use it with standard log4j
# properties to get logs to appear in your
# webapp space.
# -------------------------------------------------------------------

# This first category is required and the category
# must be named 'default'. This is used for all logging
# where an explicit category is not specified (when using the Log
# utility class).  It should be set to write to the same appender
# as the org.apache.turbine category.

log4j.category.default=INFO, turbine
log4j.category.org.apache.turbine=INFO, turbine
log4j.appender.turbine=org.apache.log4j.FileAppender
log4j.appender.turbine.file=${applicationRoot}/logs/turbine.log
log4j.appender.turbine.layout=org.apache.log4j.PatternLayout
log4j.appender.turbine.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.turbine.append=false

log4j.category.org.apache.torque=INFO, torque
log4j.category.org.apache.fulcrum.db=INFO, torque
log4j.appender.torque=org.apache.log4j.FileAppender
log4j.appender.torque.file=${applicationRoot}/logs/torque.log
log4j.appender.torque.layout=org.apache.log4j.PatternLayout
log4j.appender.torque.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.torque.append=false

log4j.category.org.apache.fulcrum=INFO, services
log4j.appender.services=org.apache.log4j.FileAppender
log4j.appender.services.file=${applicationRoot}/logs/services.log
log4j.appender.services.layout=org.apache.log4j.PatternLayout
log4j.appender.services.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.services.append=false


log4j.category.org.apache.commons=INFO, commons
log4j.appender.commons=org.apache.log4j.FileAppender
log4j.appender.commons.file=${applicationRoot}/logs/commons.log
log4j.appender.commons.layout=org.apache.log4j.PatternLayout
log4j.appender.commons.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.commons.append=false

log4j.category.com.cyclops=DEBUG, cyclops
log4j.appender.cyclops=org.apache.log4j.FileAppender
log4j.appender.cyclops.file=${applicationRoot}/logs/cyclops.log
log4j.appender.cyclops.layout=org.apache.log4j.PatternLayout
log4j.appender.cyclops.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.cyclops.append=false


# -------------------------------------------------------------------
#
#  M O D E
#
# -------------------------------------------------------------------
# If this turbine app will always be invoked from another application
# mode can be set to integrated which will cause Turbine to pass any
# errors up to the application that invoked Turbine.  Under standalone
# operation, Turbine swallows the error after sending an error page
# as the response.  If this Turbine application operates both as a 
# normal webapp and can be invoked from another application, set the 
# mode to standalone and see the Turbine servlet's javadoc for method
# to set the mode on a request basis.
#
# Possible values: standalone, integrated
# Default: standalone
# -------------------------------------------------------------------

turbine.mode=standalone

# -------------------------------------------------------------------
#
#  R E S O L V E R
#
# -------------------------------------------------------------------
# This determines what resolver to use to find modules and templates.
# The DefaultResolver uses the ModuleLoader's algorithm (see below) to
# find modules
#
# Default: org.apache.turbine.pipeline.DefaultResolver
# -------------------------------------------------------------------

resolver.default=org.apache.turbine.pipeline.DefaultResolver

# -------------------------------------------------------------------
# 
#  M O D U L E  P A C K A G E S
#
# -------------------------------------------------------------------
# This is the "classpath" for Turbine.  In order to locate your own
# modules, you should add them to this path.  For example, if you have
# com.company.actions, com.company.screens, com.company.navigations,
# then this setting would be "com.company,org.apache.turbine.modules".
# This path is searched in order.  For example, Turbine comes with a
# screen module named "Login".  If you wanted to have your own screen
# module named "Login", then you would specify the path to your
# modules before the others.
#
# Default: org.apache.turbine.modules
# -------------------------------------------------------------------

module.packages=com.cyclops.tornado.modules,org.apache.turbine.modules

# These are the default modules to emulate the Turbine
# 2.1 page/layout/nav/screen system.

module.default.actions=actions.TemplateAction
module.default.layouts=Module
module.default.navigations=Module
module.default.screens=Module

# Turbine's default Pipeline implementation uses a (pluggable)
# descriptor to define which Valves it consists of.
pipeline.default=org.apache.turbine.pipeline.TurbinePipeline
pipeline.default.descriptor=conf/tornado-turbine-pipeline.xml
pipeline.default.targetModuleType=screens

template.default=/Default
template.default.extension=vm

# -------------------------------------------------------------------
# 
#  F R A M E W O R K  S E T T I N G S
#
# -------------------------------------------------------------------
# These are settings that control the behaviour of the framework,
# such as determining whether a template system is in use, what
# the default templates and screens are and session handling settings.
#
# Non-qualifed Java class names below located relative to the package
# names listed in the module.packages property.
# -------------------------------------------------------------------

template.login=Login.vm
template.homepage=Index.vm
template.error=Error.vm

# session.timeout=1800

default.doctype=Html40Transitional

action.login=LoginUser
action.logout=LogoutUser
action.sessionvalidator=TemplateSessionValidator
action.accesscontroller=AccessController

# -------------------------------------------------------------------
# 
#  T U R B I N E  S E R V I C E S
#
# -------------------------------------------------------------------

## Refer to tornado.properties
#services.RunDataService.classname=org.apache.turbine.services.rundata.TurbineRunDataService
services.PullService.classname=org.apache.turbine.services.pull.TurbinePullService
## Needed by the RunData Service
services.MimeTypeService.classname=org.apache.fulcrum.mimetype.TurbineMimeTypeService

# -------------------------------------------------------------------
# 
#  P U L L  S E R V I C E
#
# -------------------------------------------------------------------
# These are the properties for the Pull Service, the service
# that works in conjuction with the Turbine Pull Model API.
# -------------------------------------------------------------------

# This determines whether the non-request tools are refreshed 
# on each request (request tools aren't ever, because they're
# instantiated for the request only anyway).
services.PullService.toolsPerRequestRefresh=true

# These are tools that are placed in the context by the service
# These tools will be made available to all your
# templates. You list the tools in the following way:
#
# services.PullService.tool.<scope>.<id>=<classname>
#
# <scope>      is the tool scope: global, request, session
#              or persistent (see below for more details)
# <id>         is the name of the tool in the context
#
# You can configure the tools in this way:
# services.PullService.tool.<id>.<parameter>=<value>
#
# So if you find "global", "request", "session" or "persistent" as second
# part, it is a configuration to put a tool into the toolbox, else it is a
# tool specific configuration.
#
# For example:
#
# services.PullService.tool.global.ui=org.apache.turbine.util.pull.UIManager
# services.PullService.tool.global.mm=org.apache.turbine.util.pull.MessageManager
# services.PullService.tool.request.link=org.apache.turbine.util.template.TemplateLink
# services.PullService.tool.request.page=org.apache.turbine.util.template.TemplatePageAttributes
#
# Then:
#
# tool.ui.skin=default
# 
# configures the value of "skin" for the "ui" tool.
#
# Tools are accessible in all templates by the <id> given
# to the tool. So for the above listings the UIManager would
# be available as $ui, the MessageManager as $mm, the TemplateLink
# as $link and the TemplatePageAttributes as $page.
#
# You should avoid using tool names called "global", "request",
# "session" or "persistent" because of clashes with the possible Scopes.
#
# Scopes:
#
#   global:     tool is instantiated once and that instance is available
#               to all templates for all requests. Tool must be threadsafe.
#
#   request:    tool is instantiated once for each request (although the
#               PoolService is used to recycle instances). Tool need not
#               be threadsafe.
#
#   session:    tool is instantiated once for each user session, and is
#               stored in the user's temporary hashtable. Tool should be 
#               threadsafe.
#
#   persistent: tool is instantitated once for each use session, and
#               is stored in the user's permanent hashtable. This means
#               for a logged in user the tool will be persisted in the
#               user's objectdata. Tool should be threadsafe and 
#               Serializable.
#
# Defaults: none

services.PullService.tool.request.link=org.apache.turbine.tool.TemplateLink
services.PullService.tool.request.page=org.apache.turbine.tool.TemplatePageAttributes
services.PullService.tool.request.content=org.apache.turbine.tool.ContentURI
services.PullService.tool.request.l10n=org.apache.turbine.tool.LocalizationTool

services.PullService.earlyInit=true


# -------------------------------------------------------------------
#
#  R U N   D A T A   S E R V I C E
#
# -------------------------------------------------------------------
# Default implementations of base interfaces for request processing.
# Additional configurations can be defined by using other keys
# in the place of the <default> key.  
# -------------------------------------------------------------------

services.RunDataService.default.run.data=org.apache.turbine.services.rundata.DefaultTurbineRunData
services.RunDataService.default.parameter.parser=org.apache.turbine.ParameterParser
services.RunDataService.default.cookie.parser=org.apache.fulcrum.util.parser.DefaultCookieParser

## Needed by DefaultTurbineRunData
locale.default.language=en
locale.default.country=US
locale.default.charset=8859_1

# -------------------------------------------------------------------
# 
#  S E C U R E  S O C K E T S  L A Y E R
#
# -------------------------------------------------------------------
# Whether the web server is able to use SSL.  Links in Turbine can
# check this property to determine if SSL can be used.
#
# Default: true
# -------------------------------------------------------------------

use.ssl=true

#--------------------------------------------------------------------
#
# P A R A M E T E R  P A R S E R
#
#--------------------------------------------------------------------
#
# This variable controls the case folding applied to URL variable
# names.
#
# Allowed values: none, lower, upper
# Default: lower
#

url.case.folding=lower

# -------------------------------------------------------------------
# 
#  F U L C R U M  C O N F I G U R A T I O N
#
# -------------------------------------------------------------------
include=services.properties

include=tornado.properties