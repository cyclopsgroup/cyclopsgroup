<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Install and run</title>
    </properties>
    <body>
        <section name="How to create package">
            <p>
                Until course list project release a war version package, users need to check out code from cvs and build
                war file with maven.
            </p>
            <subsection name="Check out from CVS">
                <p>
                    Pull out courselist module from cvs server by following this script. Make sure cvs client is
                    properly installed before doing this.
                    <source>
                        <![CDATA[
[...]$ cvs -d :pserver:anonymous@cvs.sourceforge.net:/cvsroot/cyclops-group login
(Logging in to anonymous@cvs.sourceforge.net)
CVS password:
[...]$ cvs -d :pserver:anonymous@cvs.sourceforge.net:/cvsroot/cyclops-group co courselist
                    ]]>
                    </source>
                </p>
                <p>
                    This can also be done within
                    <a href="http://www.wincvs.org">wincvs</a>
                    . Download and install
                    <a href="http://www.wincvs.org">wincvs</a>
                    , check out the courselist project from sourceforge cvs server. CVSROOT is
                    <source>:pserver:anonymous@cvs.sourceforge.net:/cvsroot/cyclops-group</source>
                    . If you have an account in sourceforge, change anonymous to the account name so that you will be
                    able to change and commit the code. The module name is courselist.
                </p>
                <p>Assume the project is checked out to C:/projects/courselist.</p>
            </subsection>
            <subsection name="Install MySQL">
                <p>
                    Download and install mysql 4.1 from
                    <a href="http://dev.mysql.com/downloads/mysql/4.1.html">mysql.com</a>
                    . Mysql 5.0 is not fully supported by hibernate so far, so make sure to install version 4.1 or
                    earlier version.
                </p>
                <p>
                    Create a database in mysql called courselist.
                    <source>
                        <![CDATA[
[...]$ mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 3 to server version: 3.23.58

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> create database dummy;
Query OK, 1 row affected (0.09 sec)

mysql> quit
Bye
                    ]]>
                    </source>
                    Then create a user "dev" in mysql, password is "dev" as well. You can download and install
                    <a href="http://dev.mysql.com/downloads/administrator/1.1.html">mysql adminsitrator</a>
                    to do it easily.
                </p>
            </subsection>
            <subsection name="Install Apache Tomcat">
                <p>
                    Download and unzip apache tomcat 4.1.x from
                    <a href="http://jakarta.apache.org/tomcat/download-41.cgi">
                        http://jakarta.apache.org/tomcat/download-41.cgi
                    </a>
                    . Assume the unzipped directory of tomcat is C:/java/apache/jakarta-apache-4.1.31.
                </p>
            </subsection>
            <subsection name="Install Apache Manve">
                <p>Maven is a building and project managing tool which can be considered as a replacement of ant.</p>
                <p>
                    Download and unzip maven from http://maven.apache.org/start/download.html, unzip it to a directory.
                    Assume the directory is C:/java/apache/maven-1.0.2. Append C:/java/apache/maven-1.0.2/bin into the
                    system path.
                </p>
                <p>
                    Create file C:/Documents and Settings/&lt;your windows user name&gt;/build.properties. Copy the
                    following content into this file.
                    <source>
                        <![CDATA[
maven.repo.remote=http://cyclopsgroup.com/lib,http://www.ibiblio.org/maven
maven.test.skip=true
maven.compile.encoding=UTF-8

maven.appserver.home=C:/java/apache/jakarta-apache-4.1.31
maven.appserver.name=tomcat
maven.appserver.version=4.1.x

maven.jar.override=on
maven.jar.tools=${java.home}/../lib/tools.jar
                    ]]>
                    </source>
                </p>
            </subsection>
        </section>
        <section name="Deploy and run">
            <p>
                The war file is completely container neutralized. This means technically it can run on any Java servlet
                container such as tomcat, weblogic or even jetty. To run it in tomcat, following the instruction.
                <source>
                    <![CDATA[
[...]$ cd C:/projects/courselist
[courselist]$ maven resetdb
//This command will create tables and insert init data in database
...
...
[courselist]$ maven appserver:install
//This command copies some necessary files from tomcat to local
//in order to run start development server.
...
...
[courselist]$ maven war:webapp
//This command copies the files in this project into local tomcat
...
...
[courselist]$ maven appserver:start
//This command start the development tomcat server
...
...
                ]]>
                </source>
            </p>
            <p>
                If the server is successfully started, visit
                <a href="http://localhost:7080/courselist">http://localhost:7080/courselist</a>
                to see the home page.
            </p>
        </section>
    </body>
</document>