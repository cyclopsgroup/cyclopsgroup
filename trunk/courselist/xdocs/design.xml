<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Design</title>
    </properties>
    <body>
        <section name="Index">
            <p>
                <ul>
                    <li>
                        <a href="#Design overview">Design overview</a>
                    </li>
                    <li>
                        <a href="#UI modules">UI modules</a>
                        <ul>
                            <li>
                                <a href="#Course management component">Course management component</a>
                            </li>
                            <li>
                                <a href="#Student management component">Student management component</a>
                            </li>
                            <li>
                                <a href="#Student workbench">Student workbench</a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="#Services">Services</a>
                        <ul>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.CourseListService">
                                    com.cyclopsgroup.courselist.CourseListService
                                </a>
                            </li>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.StudentService">
                                    com.cyclopsgroup.courselist.StudentService
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="#Database entities">Database entities</a>
                        <ul>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.entity.Course">
                                    com.cyclopsgroup.courselist.entity.Course
                                </a>
                            </li>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.entity.CoursePrerequisite">
                                    com.cyclopsgroup.courselist.entity.CoursePrerequisite
                                </a>
                            </li>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.entity.Student">
                                    com.cyclopsgroup.courselist.entity.Student
                                </a>
                            </li>
                            <li>
                                <a href="#com.cyclopsgroup.courselist.entity.StudentCourse">
                                    com.cyclopsgroup.courselist.entity.StudentCourse
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </p>
        </section>
        <section name="Design overview">
            <p>
                Course list is a J2EE web application based on
                <a href="http://www.cyclopsgroup.com/project/tornado">Cyclops Group Tornado project</a>
                . Vertically the application is separated into three layers ---- UI modules, services and database
                entities.
                <img src="images/designstructure.jpg" alt="Design structure" />
            </p>
            <p>
                Please look at
                <a href="dependencies.html">Dependencies</a>
                to find out the related tools and technologies.
            </p>
        </section>
        <section name="UI modules">
            <p>
                UI module is the presentation layer of course list project. Horizontally, ui modules are separated into
                the following three components. Each component is made up of several views and actions. Here a view
                means a part of HTML page that shows information and an action means a class that will be executed after
                some button is pushed.
            </p>
            <subsection name="Course management component">
                <p>Administrators can manage(add/edit/delete) course informations in this component.</p>
                <p>
                    <table>
                        <tr>
                            <th>Type</th>
                            <th>Page/Action</th>
                            <th>Function</th>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>CourseList</td>
                            <td>
                                Shows a list of all courses. The list can be sorted based on prefix, code, name and
                                credit. Each row of course has a checkbox, user and delete courses by checking and
                                pushing "Delete Selected" button.
                            </td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>DeleteCourseAction</td>
                            <td>Delete checked course(s) and return to previous page</td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>CreateCourse d</td>
                            <td>A form for user to input information for creating new form</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>CreateCourseAction</td>
                            <td>
                                Action to take form information from CreateForm view and create the form in database
                            </td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>EditCourse</td>
                            <td>Edit basic information of a course</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>SaveCourseAction</td>
                            <td>Action to save basic information of course</td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>EditPrerequisite</td>
                            <td>Edit prerequisite relation between courses</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>SavePrerequisiteAction</td>
                            <td>Action to save prerequisition changes</td>
                        </tr>
                    </table>
                </p>
            </subsection>
            <subsection name="Student management component">
                <p>Administrators manage student information in this component.</p>
                <p>
                    <table>
                        <tr>
                            <th>Type</th>
                            <th>Page/Action</th>
                            <th>Function</th>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>StudentSearch</td>
                            <td>
                                Search student with ID, name, email, address or telephone number. There will be checkbox
                                for each search result where admin can delete a student.
                            </td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>DeleteStudentAction</td>
                            <td>Delete checked student(s) and return to previous page</td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>CreateStudent</td>
                            <td>A form for user to input student information for creating new student</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>CreateStudentAction</td>
                            <td>
                                Action to take form information from CreateStudent view and create the student in
                                database
                            </td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>StudentProfile</td>
                            <td>View or edit information of a student</td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>StudentTranscript</td>
                            <td>View student's course history.</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>SaveStudentAction</td>
                            <td>Action to save change of student information</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>AddCourseAction</td>
                            <td>Force student to register a course</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>DropCourseAction</td>
                            <td>Force student to drop a course</td>
                        </tr>
                    </table>
                </p>
            </subsection>
            <subsection name="Student workbench">
                <p>
                    Student workbench component is where student manages his own information. He can change profile,
                    add/drop class and print transcript.
                </p>
                <p>
                    <table>
                        <tr>
                            <th>Type</th>
                            <th>Page/Action</th>
                            <th>Function</th>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>My Profile</td>
                            <td>View/edit my information.</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>SaveProfileAction</td>
                            <td>Student save profile change.</td>
                        </tr>
                        <tr>
                            <td>View</td>
                            <td>MyTranscript</td>
                            <td>View his/her own course history.</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>AddCourseAction</td>
                            <td>Register a course</td>
                        </tr>
                        <tr>
                            <td>Action</td>
                            <td>DropCourseAction</td>
                            <td>Drop a course. If prerequiste is not completely satisfied, throw exception.</td>
                        </tr>
                    </table>
                </p>
            </subsection>
        </section>
        <section name="Services">
            <p>
                Tornado is a simple web application on top of
                <a href="http://excalibur.apache.org">Apache Avalon</a>
                SOA architecture. Therefore many core functions are implemented following avalon service standard. In
                course list project, the following services will be created. These services will be the implementation
                of business logic in course list project.
            </p>
            <subsection name="com.cyclopsgroup.courselist.CourseListService">
                <p>
                    CourseListService overview
                    <table>
                        <tr>
                            <td>Role</td>
                            <td>com.cyclopsgroup.courselist.CourseListService</td>
                        </tr>
                        <tr>
                            <td>Implementation</td>
                            <td>com.cyclopsgroup.courselist.impl.DefaultCourseListService</td>
                        </tr>
                        <tr>
                            <td>Description</td>
                            <td>Core course list management service</td>
                        </tr>
                    </table>
                </p>
                <p>
                    CourseListService functions
                    <table>
                        <tr>
                            <th>Method</th>
                            <th>Inputs</th>
                            <th>Returns</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td>findByCode</td>
                            <td>String prefix, String code</td>
                            <td>Course object</td>
                            <td>Find a course object with given prefix and code</td>
                        </tr>
                        <tr>
                            <td>getAllCourses</td>
                            <td>Nothing</td>
                            <td>A list of all active courses</td>
                            <td>Get all active courses</td>
                        </tr>
                    </table>
                </p>
            </subsection>
            <subsection name="com.cyclopsgroup.courselist.StudentService">
                <p>
                    StudentService overview
                    <table>
                        <tr>
                            <td>Role</td>
                            <td>com.cyclopsgroup.courselist.StudentService</td>
                        </tr>
                        <tr>
                            <td>Implementation</td>
                            <td>com.cyclopsgroup.courselist.impl.DefaultStudentService</td>
                        </tr>
                        <tr>
                            <td>Description</td>
                            <td>Service to handle</td>
                        </tr>
                    </table>
                </p>
                <p>
                    StudentService functions
                    <table>
                        <tr>
                            <th>Method</th>
                            <th>Inputs</th>
                            <th>Returns</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td>search</td>
                            <td>Student ID, name, email, address or telephone</td>
                            <td>List of students</td>
                            <td>Find students with given information</td>
                        </tr>
                        <tr>
                            <td>dropCourse</td>
                            <td>String studentId, String courseId</td>
                            <td>Nothing</td>
                            <td>Drop an registered course</td>
                        </tr>
                        <tr>
                            <td>registerCourse</td>
                            <td>String studentId, String courseId, boolean forced</td>
                            <td>Nothing</td>
                            <td>Register a course for student</td>
                        </tr>
                    </table>
                </p>
            </subsection>
        </section>
        <section name="Database entities">
            <p>
                Course list project simply take
                <a href="http://hibernate.org">Hibernate</a>
                as the database layer technology. With tools provided by tornado, most of the operations are simplified.
                In this project, the only thing developer need to do is creating hibernate mapping file and generate
                POJOs(Plain old java object).
            </p>
            <p>
                <table>
                    <tr>
                        <th>Entity class</th>
                        <th>Table name</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>
                            <a href="#com.cyclopsgroup.courselist.entity.Course">
                                com.cyclopsgroup.courselist.entity.Course
                            </a>
                        </td>
                        <td>c_cl_course</td>
                        <td>Main course table</td>
                    </tr>
                    <tr>
                        <td>
                            <a href="#com.cyclopsgroup.courselist.entity.CoursePrerequisite">
                                com.cyclopsgroup.courselist.entity.CoursePrerequisite
                            </a>
                        </td>
                        <td>c_cl_course_prerequisite</td>
                        <td>Course rerequisite relation</td>
                    </tr>
                    <tr>
                        <td>
                            <a href="#com.cyclopsgroup.courselist.entity.Student">
                                com.cyclopsgroup.courselist.entity.Student
                            </a>
                        </td>
                        <td>c_cl_student</td>
                        <td>Student</td>
                    </tr>
                    <tr>
                        <td>
                            <a href="#com.cyclopsgroup.courselist.entity.StudentCourse">
                                com.cyclopsgroup.courselist.entity.StudentCourse
                            </a>
                        </td>
                        <td>c_cl_student_course</td>
                        <td>Student course relation</td>
                    </tr>
                </table>
            </p>
            <subsection name="com.cyclopsgroup.courselist.entity.Course">
                <table>
                    <tr>
                        <th>Property name</th>
                        <th>Column name</th>
                        <th>PK</th>
                        <th>Required</th>
                        <th>Type</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>id</td>
                        <td>course_id</td>
                        <td>true</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Primary key of course table</td>
                    </tr>
                    <tr>
                        <td>prefix</td>
                        <td>prefix</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Course code prefix</td>
                    </tr>
                    <tr>
                        <td>courseCode</td>
                        <td>course_code</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Course code</td>
                    </tr>
                    <tr>
                        <td>name</td>
                        <td>course_name</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Displayed name for course</td>
                    </tr>
                    <tr>
                        <td>description</td>
                        <td>description</td>
                        <td>false</td>
                        <td>false</td>
                        <td>string</td>
                        <td>Long description for course</td>
                    </tr>
                    <tr>
                        <td>coRequisites</td>
                        <td>co_requisites</td>
                        <td>false</td>
                        <td>false</td>
                        <td>string</td>
                        <td>Course co-requisites</td>
                    </tr>
                    <tr>
                        <td>isDisabled</td>
                        <td>is_disabled</td>
                        <td>false</td>
                        <td>true</td>
                        <td>boolean</td>
                        <td>True if course is disabled</td>
                    </tr>
                </table>
            </subsection>
            <subsection name="com.cyclopsgroup.courselist.entity.CoursePrerequisite">
                <table>
                    <tr>
                        <th>Property name</th>
                        <th>Column name</th>
                        <th>PK</th>
                        <th>Required</th>
                        <th>Type</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>id</td>
                        <td>course_prerequisite_id</td>
                        <td>true</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Primary key of course table</td>
                    </tr>
                    <tr>
                        <td>courseId</td>
                        <td>course_id</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Course id</td>
                    </tr>
                    <tr>
                        <td>prerequisteId</td>
                        <td>prerequisite_id</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Prerequisite course id</td>
                    </tr>
                </table>
            </subsection>
            <subsection name="com.cyclopsgroup.courselist.entity.Student">
                <table>
                    <tr>
                        <th>Property name</th>
                        <th>Column name</th>
                        <th>PK</th>
                        <th>Required</th>
                        <th>Type</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>id</td>
                        <td>student_id</td>
                        <td>true</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Student primary key</td>
                    </tr>
                    <tr>
                        <td>ssn</td>
                        <td>ssn</td>
                        <td>false</td>
                        <td>true</td>
                        <td>int</td>
                        <td>Student SSN number</td>
                    </tr>
                    <tr>
                        <td>name</td>
                        <td>student_name</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Student's full name</td>
                    </tr>
                    <tr>
                        <td>email</td>
                        <td>email</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Email address</td>
                    </tr>
                    <tr>
                        <td>address</td>
                        <td>address</td>
                        <td>false</td>
                        <td>false</td>
                        <td>string</td>
                        <td>Residential address</td>
                    </tr>
                    <tr>
                        <td>telephone</td>
                        <td>telephone</td>
                        <td>false</td>
                        <td>false</td>
                        <td>string</td>
                        <td>Telephone number</td>
                    </tr>
                    <tr>
                        <td>isDisabled</td>
                        <td>is_disabled</td>
                        <td>false</td>
                        <td>true</td>
                        <td>boolean</td>
                        <td>True if course is disabled</td>
                    </tr>
                </table>
            </subsection>
            <subsection name="com.cyclopsgroup.courselist.entity.StudentCourse">
                <table>
                    <tr>
                        <th>Property name</th>
                        <th>Column name</th>
                        <th>PK</th>
                        <th>Required</th>
                        <th>Type</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>id</td>
                        <td>student_course_id</td>
                        <td>true</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Primary key of course table</td>
                    </tr>
                    <tr>
                        <td>courseId</td>
                        <td>course_id</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Course ID</td>
                    </tr>
                    <tr>
                        <td>studentId</td>
                        <td>student_id</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Student ID</td>
                    </tr>
                    <tr>
                        <td>status</td>
                        <td>course_status</td>
                        <td>false</td>
                        <td>true</td>
                        <td>string</td>
                        <td>Status of this relationship. Could be finished, taking or failed</td>
                    </tr>
                    <tr>
                        <td>credit</td>
                        <td>credit</td>
                        <td>false</td>
                        <td>true</td>
                        <td>float</td>
                        <td>The credit student got on this course</td>
                    </tr>
                </table>
            </subsection>
        </section>
    </body>
</document>