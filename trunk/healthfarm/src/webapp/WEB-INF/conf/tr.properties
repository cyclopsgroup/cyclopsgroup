# -------------------------------------------------------------------
# 
#  S Y S T E M  P R O P E R T I E S
#
# -------------------------------------------------------------------
system.mail.host=mail.vtradex.com
system.mail.smtp.from=admin@jftech.com

# -------------------------------------------------------------------
# 
#  L O G G I N G
#
# -------------------------------------------------------------------
# We use Log4J for all Turbine logging and we embed the log4j
# properties within our application configuration.
#
# NOTE:
# The presence of ${applicationRoot} in the logging configuration
# is not a mistake. Internally the value of ${applicationRoot}
# is set so that you can use it with standard log4j
# properties to get logs to appear in your
# webapp space.
# -------------------------------------------------------------------

# This first category is required and the category
# must be named 'default'. This is used for all logging
# where an explicit category is not specified (when using the Log
# utility class).  It should be set to write to the same appender
# as the org.apache.turbine category.

log4j.category.default=INFO, turbine
log4j.category.org.apache.turbine=INFO, turbine
log4j.appender.turbine=org.apache.log4j.FileAppender
log4j.appender.turbine.file=${applicationRoot}/logs/turbine.log
log4j.appender.turbine.layout=org.apache.log4j.PatternLayout
log4j.appender.turbine.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.turbine.append=false

log4j.category.org.apache.torque=INFO, torque
log4j.category.org.apache.fulcrum.db=INFO, torque
log4j.appender.torque=org.apache.log4j.FileAppender
log4j.appender.torque.file=${applicationRoot}/logs/torque.log
log4j.appender.torque.layout=org.apache.log4j.PatternLayout
log4j.appender.torque.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.torque.append=false

log4j.category.org.apache.fulcrum=INFO, services
log4j.appender.services=org.apache.log4j.FileAppender
log4j.appender.services.file=${applicationRoot}/logs/services.log
log4j.appender.services.layout=org.apache.log4j.PatternLayout
log4j.appender.services.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.services.append=false


log4j.category.org.apache.commons=INFO, commons
log4j.appender.commons=org.apache.log4j.FileAppender
log4j.appender.commons.file=${applicationRoot}/logs/commons.log
log4j.appender.commons.layout=org.apache.log4j.PatternLayout
log4j.appender.commons.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.commons.append=false

log4j.category.com.cyclops=DEBUG, cyclops
log4j.appender.cyclops=org.apache.log4j.FileAppender
log4j.appender.cyclops.file=${applicationRoot}/logs/cyclops.log
log4j.appender.cyclops.layout=org.apache.log4j.PatternLayout
log4j.appender.cyclops.layout.conversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.cyclops.append=false


# -------------------------------------------------------------------
#
#  M O D E
#
# -------------------------------------------------------------------
# If this turbine app will always be invoked from another application
# mode can be set to integrated which will cause Turbine to pass any
# errors up to the application that invoked Turbine.  Under standalone
# operation, Turbine swallows the error after sending an error page
# as the response.  If this Turbine application operates both as a 
# normal webapp and can be invoked from another application, set the 
# mode to standalone and see the Turbine servlet's javadoc for method
# to set the mode on a request basis.
#
# Possible values: standalone, integrated
# Default: standalone
# -------------------------------------------------------------------

turbine.mode=standalone

# -------------------------------------------------------------------
#
#  R E S O L V E R
#
# -------------------------------------------------------------------
# This determines what resolver to use to find modules and templates.
# The DefaultResolver uses the ModuleLoader's algorithm (see below) to
# find modules
#
# Default: org.apache.turbine.pipeline.DefaultResolver
# -------------------------------------------------------------------

resolver.default=org.apache.turbine.pipeline.DefaultResolver

# -------------------------------------------------------------------
# 
#  M O D U L E  P A C K A G E S
#
# -------------------------------------------------------------------
# This is the "classpath" for Turbine.  In order to locate your own
# modules, you should add them to this path.  For example, if you have
# com.company.actions, com.company.screens, com.company.navigations,
# then this setting would be "com.company,org.apache.turbine.modules".
# This path is searched in order.  For example, Turbine comes with a
# screen module named "Login".  If you wanted to have your own screen
# module named "Login", then you would specify the path to your
# modules before the others.
#
# Default: org.apache.turbine.modules
# -------------------------------------------------------------------

module.packages=com.cyclops.healthfarm.modules,com.cyclops.tornado.modules,org.apache.turbine.modules

# These are the default modules to emulate the Turbine
# 2.1 page/layout/nav/screen system.

module.default.actions=actions.TemplateAction
module.default.layouts=Module
module.default.navigations=Module
module.default.screens=Module

# Turbine's default Pipeline implementation uses a (pluggable)
# descriptor to define which Valves it consists of.
pipeline.default=org.apache.turbine.pipeline.TurbinePipeline
pipeline.default.descriptor=conf/tornado-turbine-pipeline.xml
pipeline.default.targetModuleType=screens

template.default=/Default
template.default.extension=vm

# -------------------------------------------------------------------
# 
#  F R A M E W O R K  S E T T I N G S
#
# -------------------------------------------------------------------
# These are settings that control the behaviour of the framework,
# such as determining whether a template system is in use, what
# the default templates and screens are and session handling settings.
#
# Non-qualifed Java class names below located relative to the package
# names listed in the module.packages property.
# -------------------------------------------------------------------

template.login=Login.vm
template.homepage=Index.vm
template.error=Error.vm

# session.timeout=1800

default.doctype=Html40Transitional

action.login=LoginUser
action.logout=LogoutUser
action.sessionvalidator=TemplateSessionValidator
action.accesscontroller=AccessController

# -------------------------------------------------------------------
# 
#  T U R B I N E  S E R V I C E S
#
# -------------------------------------------------------------------

## Refer to tornado.properties
#services.RunDataService.classname=org.apache.turbine.services.rundata.TurbineRunDataService
services.PullService.classname=org.apache.turbine.services.pull.TurbinePullService
## Needed by the RunData Service
services.MimeTypeService.classname=org.apache.fulcrum.mimetype.TurbineMimeTypeService

# -------------------------------------------------------------------
# 
#  P U L L  S E R V I C E
#
# -------------------------------------------------------------------
# These are the properties for the Pull Service, the service
# that works in conjuction with the Turbine Pull Model API.
# -------------------------------------------------------------------

# This determines whether the non-request tools are refreshed 
# on each request (request tools aren't ever, because they're
# instantiated for the request only anyway).
services.PullService.toolsPerRequestRefresh=true

# These are tools that are placed in the context by the service
# These tools will be made available to all your
# templates. You list the tools in the following way:
#
# services.PullService.tool.<scope>.<id>=<classname>
#
# <scope>      is the tool scope: global, request, session
#              or persistent (see below for more details)
# <id>         is the name of the tool in the context
#
# You can configure the tools in this way:
# services.PullService.tool.<id>.<parameter>=<value>
#
# So if you find "global", "request", "session" or "persistent" as second
# part, it is a configuration to put a tool into the toolbox, else it is a
# tool specific configuration.
#
# For example:
#
# services.PullService.tool.global.ui=org.apache.turbine.util.pull.UIManager
# services.PullService.tool.global.mm=org.apache.turbine.util.pull.MessageManager
# services.PullService.tool.request.link=org.apache.turbine.util.template.TemplateLink
# services.PullService.tool.request.page=org.apache.turbine.util.template.TemplatePageAttributes
#
# Then:
#
# tool.ui.skin=default
# 
# configures the value of "skin" for the "ui" tool.
#
# Tools are accessible in all templates by the <id> given
# to the tool. So for the above listings the UIManager would
# be available as $ui, the MessageManager as $mm, the TemplateLink
# as $link and the TemplatePageAttributes as $page.
#
# You should avoid using tool names called "global", "request",
# "session" or "persistent" because of clashes with the possible Scopes.
#
# Scopes:
#
#   global:     tool is instantiated once and that instance is available
#               to all templates for all requests. Tool must be threadsafe.
#
#   request:    tool is instantiated once for each request (although the
#               PoolService is used to recycle instances). Tool need not
#               be threadsafe.
#
#   session:    tool is instantiated once for each user session, and is
#               stored in the user's temporary hashtable. Tool should be 
#               threadsafe.
#
#   persistent: tool is instantitated once for each use session, and
#               is stored in the user's permanent hashtable. This means
#               for a logged in user the tool will be persisted in the
#               user's objectdata. Tool should be threadsafe and 
#               Serializable.
#
# Defaults: none

services.PullService.tool.request.link=org.apache.turbine.tool.TemplateLink
services.PullService.tool.request.page=org.apache.turbine.tool.TemplatePageAttributes
services.PullService.tool.request.content=org.apache.turbine.tool.ContentURI
services.PullService.tool.request.l10n=org.apache.turbine.tool.LocalizationTool

services.PullService.earlyInit=true


# -------------------------------------------------------------------
#
#  R U N   D A T A   S E R V I C E
#
# -------------------------------------------------------------------
# Default implementations of base interfaces for request processing.
# Additional configurations can be defined by using other keys
# in the place of the <default> key.  
# -------------------------------------------------------------------

services.RunDataService.default.run.data=org.apache.turbine.services.rundata.DefaultTurbineRunData
services.RunDataService.default.parameter.parser=org.apache.turbine.ParameterParser
services.RunDataService.default.cookie.parser=org.apache.fulcrum.util.parser.DefaultCookieParser

## Needed by DefaultTurbineRunData
locale.default.language=en
locale.default.country=US
locale.default.charset=8859_1

# -------------------------------------------------------------------
# 
#  S E C U R E  S O C K E T S  L A Y E R
#
# -------------------------------------------------------------------
# Whether the web server is able to use SSL.  Links in Turbine can
# check this property to determine if SSL can be used.
#
# Default: true
# -------------------------------------------------------------------

use.ssl=true

#--------------------------------------------------------------------
#
# P A R A M E T E R  P A R S E R
#
#--------------------------------------------------------------------
#
# This variable controls the case folding applied to URL variable
# names.
#
# Allowed values: none, lower, upper
# Default: lower
#

url.case.folding=lower

# -------------------------------------------------------------------
# 
#  F U L C R U M  C O N F I G U R A T I O N
#
# -------------------------------------------------------------------
include=services.properties

include=tornado.properties